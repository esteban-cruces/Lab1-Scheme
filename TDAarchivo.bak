#lang racket
(provide(all-defined-out))
;TDA Archivo

;El primer elemento será el que represente el nombre del archivo
;todos los elementos restantes representaran cada linea del texto, a medida que se agreguen

;constructor
;crea un archivo, representado en una lista, donde la primera pos. es el nombre, y el resto de elementos son los lineas del archivo
;dom: varias cadenas de caracteres
;rec: TDA Archivo
(define (crearArchivo nombreArch . textoArch)
  (append (list nombreArch) textoArch))


;selector
;funcion que seleciona el nombre del archivo
;dom: TDA Archivo
;recorrido: un string
(define (tomarNombre arch)
  (car arch))

;función que verifica si el un archivo de texto es un una lista 
;dominio: una lista de strings
;recorrido: un valor booleano
(define (archivoTexto? arch)
  (if(list? arch)
     #T
     #F))

